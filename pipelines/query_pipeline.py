import logging
from pipelines.llm_interface import query_llm_pipeline
from services.chromadb_service import get_relevant_documents
from utils.common import format_retrieved_documents


def run_query_pipeline(question: str) -> str:
    """
    Query the LLM using stored context from ChromaDB.

    Args:
        question (str): The user's question.

    Returns:
        str: The answer generated by the LLM.
    """
    try:
        # Step 1: Retrieve context from ChromaDB
        relevant_documents = get_relevant_documents(question)
        if not relevant_documents:
            raise ValueError("No relevant context found in the database.")

        context = format_retrieved_documents(relevant_documents)

        # Step 2: Query the LLM
        logging.info(f"Querying the LLM for the question: {question}")
        response = query_llm_pipeline(context, question)

        logging.info("Query pipeline completed successfully.")
        return response
    except Exception as e:
        logging.error(f"Error in query pipeline: {e}", exc_info=True)
        raise
